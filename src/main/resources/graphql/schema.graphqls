type Query{
    allProduct(page: Int = 1, size: Int = 10): PageProduct
    allActiveProduct(page: Int = 1, size: Int = 10): PageProduct
    getOrdersList(page: Int = 1, size: Int = 10):PageOrders
    getConfirmedOrdersList(page: Int = 1, size: Int = 10):PageOrders
    getUsersOrdersList(page: Int = 1, size: Int = 10):PageOrders
    getAssignedOrdersList(page: Int = 1, size: Int = 10):PageOrders
    getOneOrder(orderNo: String!): OneResponseOrders
    getOrdersByType(type:String, productId : ID):OrderListResponse
    getOneProduct(name: String!): OneResponseProduct
    statusAdmin:[StatusAdmin]
    statusUser:[StatusUser]
    sizes:[Sizes]
    allUsers(page: Int = 1, size: Int = 10):PageUsers
    balanceUser:Balance
    allTransactions(page: Int = 1, size: Int = 10):PageTransactions
    getTransactionsForCurrentUser(page: Int = 1, size: Int = 10):PageTransactions
    getTransactionsNotconfirmed(page: Int = 1, size: Int = 10):PageTransactions
    getPersonnel(page: Int = 1, size: Int = 10):PageUsers
    getOneUser(email:String):Users
    getOneUserByIdid(id:Int):Users
    getCurrentUserOrdersCount:Int
    getConfirmedOrder:Int
    getAssignedOrder:Int
    getCurrentUserOrdersByStatus(userStatus:StatusUser):Int
    getAssignedOrdersByStatus(userStatus:StatusUser):Int
    getConfirmedOrdersByStatus(userStatus:StatusUser):Int
}


type Mutation {
    addOrder(
        orderNo: String,
        price: Float,
        type: String,
        productId: Int,
        preview:String,
        images:[String],
    ): Message
    linkOrders(orderNo :String,orderNo2:String):Message
    unlinkOrders(orderNo :String,orderNo2:String):Message
    updateOrderPersonnel(orderNo:String,personnelId:Int):Message
    confirmOrder(orderNo: String, quantity: Int, client: ClientInput, orderItems: [OrderItemsInput]): Message
    addBalance(amount:Float):Message
    deleteUser(email:String):Message
    addUser(user:AddUser):Message
    updateUser(user:AddUser,email:String):Message
    addProduct(product:ProductInput):Message
    deleteProduct(id:ID):Message
    updateProduct(name:String, product:ProductInput):Message
    confirmBalance(no:String):Message
    confirmTransaction(transactionNo:String):Message
    cancelTransaction(transactionNo:String):Message
    validateOrder(orderNo: String,status:StatusAdmin,personnel:ID):Message
    changeOrderStatus(orderNo:String,status:StatusUser):Message
}

type Message {
    success: Boolean!
    message: String
}

type StatusUserCountDto {
    status: StatusUser
    count: Int
}
type OrderItems{
    size:Sizes
    quantity:Int
    color:Colors
}

input OrderItemsInput {
    size:Sizes
    quantity:Int
    color:Colors
}
